{"version":3,"file":"static/js/619.30278c2b.chunk.js","mappings":"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","sources":["library/hooks/useWindowSize.js","components/uielements/menu.js","components/utility/intlMessages.js","library/helpers/rtl.js","customApp/Sidebar/Sidebar.styles.js","customApp/Sidebar/SidebarMenu.js","customApp/Sidebar/index.js","customApp/Topbar/Topbar.styles.js","customApp/Dashboard/DashboardMenuItems.js","customApp/Topbar/index.js","customApp/Dashboard/DashboardRoutes.js","customApp/Dashboard/Dashboard.styles.js","customApp/Dashboard/Dashboard.js","library/helpers/style_utils.js"],"sourcesContent":["import React from 'react';\n\nconst useWindowSize = () => {\n  const isClient = typeof window === 'object';\n\n  const getSize = React.useCallback(\n    () => ({\n      width: isClient ? window.innerWidth : undefined,\n      height: isClient ? window.innerHeight : undefined,\n    }),\n    [isClient]\n  );\n\n  const [size, setSize] = React.useState(getSize);\n\n  React.useEffect(() => {\n    if (!isClient) {\n      return false;\n    }\n    const onHandleResize = () => {\n      setSize(getSize);\n    };\n    window.addEventListener('resize', onHandleResize);\n    return () => window.removeEventListener('resize', onHandleResize);\n  }, [getSize, isClient]);\n\n  return size;\n};\n\nexport default useWindowSize;\n","import { Menu } from 'antd';\n\nexport default Menu;\n","import React from 'react';\nimport { injectIntl, FormattedMessage } from 'react-intl';\n\nconst InjectMassage = props => <FormattedMessage {...props} />;\nexport default injectIntl(InjectMassage, {\n  withRef: false,\n});\n","import React from 'react';\n\nlet direction = 'ltr';\nif (typeof window !== 'undefined') {\n  direction = document.getElementsByTagName('html')[0].getAttribute('dir');\n}\nconst withDirection = Component => props => {\n  return <Component {...props} data-rtl={direction} />;\n};\n\nexport default withDirection;\nexport { direction };\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\nimport { transition, borderRadius } from '@iso/lib/helpers/style_utils';\nimport WithDirection from '@iso/lib/helpers/rtl';\n\nconst SidebarWrapper = styled.div`\n  .isomorphicSidebar {\n    z-index: 1000;\n    background: ${palette('secondary', 0)};\n    width: 280px;\n    flex: 0 0 280px;\n\n    .scrollarea {\n      height: calc(100vh - 70px);\n    }\n\n    @media only screen and (max-width: 767px) {\n      width: 240px !important;\n      flex: 0 0 240px !important;\n    }\n\n    &.ant-layout-sider-collapsed {\n      @media only screen and (max-width: 767px) {\n        width: 0;\n        min-width: 0 !important;\n        max-width: 0 !important;\n        flex: 0 0 0 !important;\n      }\n    }\n\n    .isoLogoWrapper {\n      height: 70px;\n      background: rgba(0, 0, 0, 0.3);\n      margin: 0;\n      padding: 0 10px;\n      text-align: center;\n      overflow: hidden;\n      ${borderRadius()};\n\n      h3 {\n        a {\n          font-size: 21px;\n          font-weight: 300;\n          line-height: 70px;\n          letter-spacing: 3px;\n          text-transform: uppercase;\n          color: ${palette('grayscale', 6)};\n          display: block;\n          text-decoration: none;\n        }\n      }\n    }\n\n    &.ant-layout-sider-collapsed {\n      .isoLogoWrapper {\n        padding: 0;\n\n        h3 {\n          a {\n            font-size: 27px;\n            font-weight: 500;\n            letter-spacing: 0;\n          }\n        }\n      }\n    }\n\n    .isoDashboardMenu {\n      padding-top: 35px;\n      padding-bottom: 35px;\n      background: transparent;\n\n      a {\n        text-decoration: none;\n        font-weight: 400;\n      }\n\n      .ant-menu-item {\n        width: 100%;\n        display: -ms-flexbox;\n        display: flex;\n        -ms-flex-align: center;\n        align-items: center;\n        /* padding: 0 24px; */\n        margin: 0;\n      }\n\n      .isoMenuHolder {\n        display: flex;\n        align-items: center;\n\n        i {\n          font-size: 19px;\n          color: inherit;\n          margin: ${(props) =>\n            props['data-rtl'] === 'rtl' ? '0 0 0 30px' : '0 30px 0 0'};\n          width: 18px;\n          ${transition()};\n        }\n      }\n\n      .anticon {\n        font-size: 18px;\n        margin-right: 30px;\n        color: inherit;\n        ${transition()};\n      }\n\n      .nav-text {\n        font-size: 14px;\n        color: inherit;\n        font-weight: 400;\n        ${transition()};\n      }\n\n      .ant-menu-item-selected {\n        background-color: rgba(0, 0, 0, 0.4) !important;\n        .anticon {\n          color: #fff;\n        }\n\n        i {\n          color: #fff;\n        }\n\n        .nav-text {\n          color: #fff;\n        }\n      }\n\n      > li {\n        &:hover {\n          i,\n          .nav-text {\n            color: #ffffff;\n          }\n        }\n      }\n    }\n\n    .ant-menu-dark .ant-menu-inline.ant-menu-sub {\n      background: ${palette('secondary', 5)};\n    }\n\n    .ant-menu-submenu-inline,\n    .ant-menu-submenu-vertical {\n      > .ant-menu-submenu-title {\n        width: 100%;\n        display: flex;\n        align-items: center;\n        /* padding: 0 24px; */\n\n        > span {\n          display: flex;\n          align-items: center;\n        }\n\n        .ant-menu-submenu-arrow {\n          left: ${(props) => (props['data-rtl'] === 'rtl' ? '25px' : 'auto')};\n          right: ${(props) => (props['data-rtl'] === 'rtl' ? 'auto' : '25px')};\n\n          &:before,\n          &:after {\n            width: 8px;\n            ${transition()};\n          }\n\n          &:before {\n            transform: rotate(-45deg) translateX(3px);\n          }\n\n          &:after {\n            transform: rotate(45deg) translateX(-3px);\n          }\n\n          ${'' /* &:after {\n            content: '\\f123';\n            font-family: 'Ionicons' !important;\n            font-size: 16px;\n            color: inherit;\n            left: ${props => (props['data-rtl'] === 'rtl' ? '16px' : 'auto')};\n            right: ${props => (props['data-rtl'] === 'rtl' ? 'auto' : '16px')};\n            ${transition()};\n          } */};\n        }\n\n        &:hover {\n          .ant-menu-submenu-arrow {\n            &:before,\n            &:after {\n              color: #ffffff;\n            }\n          }\n        }\n      }\n\n      .ant-menu-inline,\n      .ant-menu-submenu-vertical {\n        > li:not(.ant-menu-item-group) {\n          padding-left: ${(props) =>\n            props['data-rtl'] === 'rtl' ? '0px !important' : '74px !important'};\n          padding-right: ${(props) =>\n            props['data-rtl'] === 'rtl' ? '74px !important' : '0px !important'};\n          font-size: 13px;\n          font-weight: 400;\n          margin: 0;\n          color: inherit;\n          ${transition()};\n\n          &:hover {\n            a {\n              color: #ffffff !important;\n            }\n          }\n        }\n\n        .ant-menu-item-group {\n          padding-left: 0;\n\n          .ant-menu-item-group-title {\n            padding-left: 100px !important;\n          }\n          .ant-menu-item-group-list {\n            .ant-menu-item {\n              padding-left: 125px !important;\n            }\n          }\n        }\n      }\n\n      .ant-menu-sub {\n        box-shadow: none;\n        background-color: transparent !important;\n      }\n    }\n\n    &.ant-layout-sider-collapsed {\n      .nav-text {\n        display: none;\n      }\n\n      .ant-menu-submenu-inline > {\n        .ant-menu-submenu-title:after {\n          display: none;\n        }\n      }\n\n      .ant-menu-submenu-vertical {\n        > .ant-menu-submenu-title:after {\n          display: none;\n        }\n\n        .ant-menu-sub {\n          background-color: transparent !important;\n\n          .ant-menu-item {\n            height: 35px;\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default WithDirection(SidebarWrapper);\n","import React from 'react';\nimport {Link, useRouteMatch} from 'react-router-dom';\nimport {Menu} from 'antd';\n\nconst SubMenu = Menu.SubMenu;\n\nconst stripTrailingSlash = str => {\n  if (str.substr(-1) === '/') {\n    return str.substr(0, str.length - 1);\n  }\n  return str;\n};\n\nconst SidebarMenu = (props) => {\n  const {singleOption, submenuStyle, submenuColor, ...rest} = props;\n  let match = useRouteMatch();\n  const {key, label, leftIcon, children} = singleOption;\n  const url = stripTrailingSlash(match.url);\n\n  if (children) {\n    return (\n      <SubMenu\n        key={key}\n        title={\n          <span className=\"isoMenuHolder\" style={submenuColor}>\n            <i className={leftIcon}/>\n            <span className=\"nav-text\">\n              {label}\n            </span>\n          </span>\n        }\n        {...rest}\n      >\n        {children.map(child => {\n          const linkTo = child.withoutDashboard\n            ? `/${child.key}`\n            : `${url}/${child.key}`;\n          return (\n            <Menu.Item style={submenuStyle} key={child.key}>\n              <Link style={submenuColor} to={linkTo}>\n                {child.label}\n              </Link>\n            </Menu.Item>\n          );\n        })}\n      </SubMenu>\n    );\n  }\n  return (\n    <Menu.Item key={key} {...rest}>\n      <Link to={`${url}/${key}`}>\n        <span className=\"isoMenuHolder\" style={submenuColor}>\n          <i className={leftIcon}/>\n          <span className=\"nav-text\">\n            {label}\n          </span>\n        </span>\n      </Link>\n    </Menu.Item>\n  );\n};\n\nexport default React.memo(SidebarMenu);\n","import React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Layout} from 'antd';\nimport options from './options';\nimport Scrollbars from '@iso/components/utility/customScrollBar';\nimport Menu from '@iso/components/uielements/menu';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport appActions from '@iso/redux/app/actions';\nimport Logo from '@iso/components/utility/logo';\nimport SidebarWrapper from './Sidebar.styles';\nimport SidebarMenu from './SidebarMenu';\n\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\nconst {Sider} = Layout;\n\nconst {\n  toggleOpenDrawer,\n  changeOpenKeys,\n  changeCurrent,\n  toggleCollapsed,\n} = appActions;\n\nexport default function Index() {\n  const dispatch = useDispatch();\n  const {\n    view,\n    openKeys,\n    collapsed,\n    openDrawer,\n    current,\n    height,\n  } = useSelector(state => state.App);\n  const customizedTheme = useSelector(\n    state => state.ThemeSwitcher.sidebarTheme\n  );\n\n  function handleClick(e) {\n    dispatch(changeCurrent([e.key]));\n    if (view === 'MobileView') {\n      setTimeout(() => {\n        dispatch(toggleCollapsed());\n        // dispatch(toggleOpenDrawer());\n      }, 100);\n\n      // clearTimeout(timer);\n    }\n  }\n\n  function onOpenChange(newOpenKeys) {\n    const latestOpenKey = newOpenKeys.find(\n      key => !(openKeys.indexOf(key) > -1)\n    );\n    const latestCloseKey = openKeys.find(\n      key => !(newOpenKeys.indexOf(key) > -1)\n    );\n    let nextOpenKeys = [];\n    if (latestOpenKey) {\n      nextOpenKeys = getAncestorKeys(latestOpenKey).concat(latestOpenKey);\n    }\n    if (latestCloseKey) {\n      nextOpenKeys = getAncestorKeys(latestCloseKey);\n    }\n    dispatch(changeOpenKeys(nextOpenKeys));\n  }\n\n  const getAncestorKeys = key => {\n    const map = {\n      sub3: ['sub2'],\n    };\n    return map[key] || [];\n  };\n\n  const isCollapsed = collapsed && !openDrawer;\n\n  const mode = isCollapsed === true ? 'vertical' : 'inline';\n\n  const onMouseEnter = event => {\n    if (collapsed && openDrawer === false) {\n      dispatch(toggleOpenDrawer());\n    }\n  };\n\n  const onMouseLeave = () => {\n    if (collapsed && openDrawer === true) {\n      dispatch(toggleOpenDrawer());\n    }\n  };\n\n  const styling = {\n    backgroundColor: customizedTheme.backgroundColor,\n  };\n\n  const submenuStyle = {\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    color: customizedTheme.textColor,\n  };\n\n  const submenuColor = {\n    color: customizedTheme.textColor,\n  };\n\n  return (\n    <SidebarWrapper>\n      <Sider\n        trigger={null}\n        collapsible={true}\n        collapsed={isCollapsed}\n        width={240}\n        className=\"isomorphicSidebar\"\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        style={styling}\n      >\n        <Logo collapsed={isCollapsed}/>\n        <Scrollbars style={{height: height - 70}}>\n          <Menu\n            onClick={handleClick}\n            theme=\"dark\"\n            className=\"isoDashboardMenu\"\n            mode={mode}\n            openKeys={isCollapsed ? [] : openKeys}\n            selectedKeys={current}\n            onOpenChange={onOpenChange}\n          >\n            {options.map(singleOption => (\n              <SidebarMenu\n                key={singleOption.key}\n                submenuStyle={submenuStyle}\n                submenuColor={submenuColor}\n                singleOption={singleOption}\n              />\n            ))}\n          </Menu>\n        </Scrollbars>\n      </Sider>\n    </SidebarWrapper>\n  );\n}\n","import styled from 'styled-components';\nimport {palette} from 'styled-theme';\nimport {\n  transition,\n  borderRadius,\n  boxShadow,\n} from '../../library/helpers/style_utils';\n\nconst TopbarWrapper = styled.div`\n  .dashboard-topbar {\n    background: #FFF;\n    width: 100%;\n    height: 90px;\n    display: flex;\n    align-items: center;\n    user-select: none;\n    \n    .top-logo {\n      height: 70px;\n    }\n      \n    .top-menu {\n      width: 100%;\n      height: 100%;\n      display: flex;\n      justify-content: center;\n    }\n  }\n`;\n\nexport default TopbarWrapper;\n","import siteConfig from '../../config/site.config';\r\n\r\nexport default [\r\n  {\r\n    key: '',\r\n    label: 'Trang chủ'\r\n  },\r\n  {\r\n    key: 'gioi-thieu',\r\n    label: 'Giới thiệu'\r\n  },\r\n  {\r\n    key: 'san-pham',\r\n    label: 'Sản phẩm',\r\n    children: [\r\n      {\r\n        key: 'coc-su',\r\n        label: 'Cốc cà phê'\r\n      },\r\n      {\r\n        key: 'ao-phong',\r\n        label: 'Áo phông'\r\n      },\r\n      {\r\n        key: 'giay-nam',\r\n        label: 'Giày nam'\r\n      },\r\n      {\r\n        key: 'giay-nu',\r\n        label: 'Giày nữ'\r\n      },\r\n      {\r\n        key: 'san-pham-khac',\r\n        label: 'Sản phẩm khác'\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    key: 'lien-he',\r\n    label: 'Liên hệ'\r\n  },\r\n  // {\r\n  //   key: 'components',\r\n  //   label: 'Components',\r\n  //   children: [\r\n  //     {\r\n  //       key: 'clock',\r\n  //       label: 'Clock'\r\n  //     },\r\n  //   ]\r\n  // }\r\n]","import React from 'react';\nimport {Layout, Menu} from 'antd';\nimport TopbarWrapper from './Topbar.styles';\nimport StardewText from '../../assets/CustomImages/stardew valley text.png'\nimport {Link} from 'react-router-dom';\nimport siteConfig from '../../config/site.config';\nimport DashboardMenuItems from \"../Dashboard/DashboardMenuItems\";\n\nconst {Header} = Layout;\n\nconst {Item, SubMenu} = Menu;\nexport default props => {\n  \n  const renderItemMenu = () => {\n    return DashboardMenuItems.map((item => {\n      if (item.children) {\n        return <SubMenu title={item.label}>\n          {item.children.map(children => <Item key={children.key}>\n            <Link to={`${siteConfig.dashboard}/${children.key}`}>{children.label}</Link>\n          </Item>)}\n        </SubMenu>\n      } else {\n        return <Item key={item.key}>\n          <Link to={`${siteConfig.dashboard}/${item.key}`}>{item.label}</Link>\n        </Item>\n      }\n    }))\n  };\n\n  const selectItemMenu = ({item, key, keyPath, selectedKeys}) => {\n    // console.log({item, key, keyPath, selectedKeys});\n  };\n\n  return (\n    <TopbarWrapper>\n      <Header className={'dashboard-topbar'}>\n        <Link to={`${siteConfig.dashboard}`}><img src={StardewText} className={'top-logo'}/></Link>\n        <Menu mode={'horizontal'} className={'top-menu'} onSelect={selectItemMenu}>\n          {renderItemMenu()}\n        </Menu>\n      </Header>\n    </TopbarWrapper>\n  );\n}\n","import React, {lazy, Suspense} from 'react';\nimport {Route, useRouteMatch, Switch} from 'react-router-dom';\nimport Loader from '../../components/utility/loader';\n\nconst routes = [\n  {\n    path: '',\n    component: lazy(() => import('../Clock')),\n    exact: true,\n  },\n  {\n    path: 'clock',\n    component: lazy(() => import('../Clock')),\n    exact: true,\n  },\n];\n\nexport default function AppRouter() {\n  const {url} = useRouteMatch();\n  return (\n    <Suspense fallback={<Loader/>}>\n      <Switch>\n        {routes.map((route, idx) => (\n          <Route exact={route.exact} key={idx} path={`${url}/${route.path}`}>\n            <route.component/>\n          </Route>\n        ))}\n      </Switch>\n    </Suspense>\n  );\n}\n","import styled, {createGlobalStyle} from 'styled-components';\nimport {palette} from 'styled-theme';\nimport {borderRadius} from \"../../library/helpers/style_utils\";\n\nexport const DashboardGlobalStyles = createGlobalStyle`\nbody {\n  -webkit-overflow-scrolling: touch;\n}\n\nhtml h1,\nhtml h2,\nhtml h3,\nhtml h4,\nhtml h5,\nhtml h6,\nhtml a,\nhtml p,\nhtml li,\ninput,\ntextarea,\nspan,\ndiv,\nhtml,\nbody,\nhtml a {\n  margin-bottom: 0;\n  font-family: 'Roboto', sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.004);\n}\n\nhtml ul {\n  -webkit-padding-start: 0px;\n  list-style: none;\n  margin-bottom: 0;\n}\n\n.scrollbar-track-y,\n.scrollbar-thumb-y {\n  width: 5px !important;\n}\n\n.scrollbar-track-x,\n.scrollbar-thumb-x {\n  height: 5px !important;\n}\n\n.scrollbar-thumb {\n  border-radius: 0 !important;\n}\n\n.scrollbar-track {\n  background: rgba(222, 222, 222, 0.15) !important;\n}\n\n.scrollbar-thumb {\n  border-radius: 0 !important;\n  background: rgba(0, 0, 0, 0.5) !important;\n}\n\n.ant-popover-placement-bottom > .ant-popover-content > .ant-popover-arrow:after,\n.ant-popover-placement-bottomLeft\n  > .ant-popover-content\n  > .ant-popover-arrow:after,\n.ant-popover-placement-bottomRight\n  > .ant-popover-content\n  > .ant-popover-arrow:after,\n.ant-popover-placement-top > .ant-popover-content > .ant-popover-arrow:after,\n.ant-popover-placement-topLeft\n  > .ant-popover-content\n  > .ant-popover-arrow:after,\n.ant-popover-placement-topRight\n  > .ant-popover-content\n  > .ant-popover-arrow:after {\n  left: 0;\n  margin-left: -4px;\n}\n\n/* Instagram Modal */\n\n.ant-modal-wrap.instagram-modal .ant-modal {\n  max-width: 935px;\n  width: 100% !important;\n}\n\n@media only screen and (max-width: 991px) {\n  .ant-modal-wrap.instagram-modal .ant-modal {\n    padding: 0 60px;\n  }\n}\n\n@media only screen and (max-width: 767px) {\n  .ant-modal-wrap.instagram-modal .ant-modal {\n    max-width: 580px;\n  }\n}\n\n.ant-modal-wrap.instagram-modal .ant-modal-content {\n  border-radius: 0;\n}\n\n.ant-modal-wrap.instagram-modal .ant-modal-content button.ant-modal-close {\n  position: fixed;\n  color: #fff;\n}\n\n.ant-modal-wrap.instagram-modal .ant-modal-content button.ant-modal-close i {\n  font-size: 24px;\n}\n\n.ant-modal-wrap.instagram-modal .ant-modal-content .ant-modal-body {\n  padding: 0;\n}\n\n/********** Add Your Global RTL CSS Here **********/\n\n/* Popover */\n\nhtml[dir='rtl'] .ant-popover {\n  text-align: right;\n}\n\n/* Ecommerce Card */\n\nhtml[dir='rtl'] .isoCardInfoForm .ant-input {\n  text-align: right;\n}\n\n/* Modal */\n\nhtml[dir='rtl'] .has-success.has-feedback:after,\nhtml[dir='rtl'] .has-warning.has-feedback:after,\nhtml[dir='rtl'] .has-error.has-feedback:after,\nhtml[dir='rtl'] .is-validating.has-feedback:after {\n  left: 0;\n  right: auto;\n}\n\nhtml[dir='rtl'] .ant-modal-close {\n  right: inherit;\n  left: 0;\n}\n\nhtml[dir='rtl'] .ant-modal-footer {\n  text-align: left;\n}\n\nhtml[dir='rtl'] .ant-modal-footer button + button {\n  margin-left: 0;\n  margin-right: 8px;\n}\n\nhtml[dir='rtl'] .ant-confirm-body .ant-confirm-content {\n  margin-right: 42px;\n}\n\nhtml[dir='rtl'] .ant-btn > .anticon + span,\nhtml[dir='rtl'] .ant-btn > span + .anticon {\n  margin-right: 0.5em;\n}\n\nhtml[dir='rtl'] .ant-btn-loading span {\n  margin-left: 0;\n  margin-right: 0.5em;\n}\n\nhtml[dir='rtl']\n  .ant-btn.ant-btn-loading:not(.ant-btn-circle):not(.ant-btn-circle-outline) {\n  padding-left: 25px;\n  padding-right: 29px;\n}\n\nhtml[dir='rtl']\n  .ant-btn.ant-btn-loading:not(.ant-btn-circle):not(.ant-btn-circle-outline)\n  .anticon {\n  margin-right: -14px;\n  margin-left: 0;\n}\n\n/* Confirm */\n\nhtml[dir='rtl'] .ant-modal.ant-confirm .ant-confirm-body > .anticon {\n  margin-left: 16px;\n  margin-right: 0;\n  float: right;\n}\n\nhtml[dir='rtl'] .ant-modal.ant-confirm .ant-confirm-btns {\n  float: left;\n}\n\nhtml[dir='rtl'] .ant-modal.ant-confirm .ant-confirm-btns button + button {\n  margin-right: 10px;\n  margin-left: 0;\n}\n\n/* Message */\n\nhtml[dir='rtl'] .ant-message .anticon {\n  margin-left: 8px;\n  margin-right: 0;\n}\n\n/* Pop Confirm */\n\nhtml[dir='rtl'] .ant-popover-message-title {\n  padding-right: 20px;\n  padding-left: 0;\n}\n\nhtml[dir='rtl'] .ant-popover-buttons {\n  text-align: left;\n}\n\n/* Notification */\n\nhtml[dir='rtl']\n  .ant-notification-notice-closable\n  .ant-notification-notice-message {\n  padding-left: 24px;\n  padding-right: 0;\n}\n\nhtml[dir='rtl']\n  .ant-notification-notice-with-icon\n  .ant-notification-notice-message,\nhtml[dir='rtl']\n  .ant-notification-notice-with-icon\n  .ant-notification-notice-description {\n  margin-right: 48px;\n}\n\nhtml[dir='rtl'] .ant-notification-notice-close {\n  right: auto;\n  left: 16px;\n}\n\nhtml[dir='rtl'] .ant-notification-notice-with-icon {\n  left: 0;\n}\n\n/* Dropzone */\n\nhtml[dir='rtl'] .dz-hidden-input {\n  display: none;\n}\n\n`;\nexport const DashboardContainer = styled.div`\n  -webkit-overflow-scrolling: touch;\n  .trigger {\n    font-size: 18px;\n    line-height: 64px;\n    padding: 0 16px;\n    cursor: pointer;\n    transition: color 0.3s;\n  }\n\n  .trigger:hover {\n    color: ${palette('primary', 0)};\n  }\n\n  .ant-layout-sider-collapsed .anticon {\n    font-size: 16px;\n  }\n\n  .ant-layout-sider-collapsed .nav-text {\n    display: none;\n  }\n\n  .ant-layout {\n    background: ${palette('secondary', 1)};\n\n    &.dashboard-mainlayout {\n      overflow: auto;\n      overflow-x: hidden;\n      \n      &::-webkit-scrollbar {\n        width: 8px;\n      }\n      \n      &::-webkit-scrollbar-track {\n        background: #FFF;\n      }\n      \n      &::-webkit-scrollbar-thumb {\n        background: #888;\n        border-radius: 6px;\n      }\n      \n      &::-webkit-scrollbar-thumb:hover {\n        background: #555;\n        cursor: pointer;\n      }\n      \n      \n      @media only screen and (min-width: 768px) and (max-width: 1220px) {\n        width: calc(100% - 80px);\n        flex-shrink: 0;\n      }\n\n      @media only screen and (max-width: 767px) {\n        width: 100%;\n        flex-shrink: 0;\n      }\n      \n      .dashboard-content {\n        padding: 0;\n        flex-shrink: 0;\n        background: #f1f3f6;\n        position: relative;\n      }\n      \n      .dashboard-footer {\n        background: #FFF;\n        font-size: 13px;\n        text-align: center;\n        border-top: 1px solid #ededed;\n        height: 70px;\n        user-select: none;\n        @media (max-width: 767px) {\n          padding: 10px 20px;\n        }\n      }\n    }\n  }\n\n  .isoLayoutContent {\n    width: 100%;\n    padding: 35px;\n    background-color: #ffffff;\n    border: 1px solid ${palette('border', 0)};\n    height: 100%;\n  }\n\n  .isomorphicLayout {\n    width: calc(100% - 240px);\n    flex-shrink: 0;\n    overflow-x: hidden !important;\n\n    @media only screen and (max-width: 767px) {\n      width: 100%;\n    }\n\n    @media only screen and (min-width: 768px) and (max-width: 1220px) {\n      width: calc(100% - 80px);\n    }\n  }\n\n  .ant-layout-footer {\n    font-size: 13px;\n    @media (max-width: 767px) {\n      padding: 10px 20px;\n    }\n  }\n`;\n","import React from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {Layout} from 'antd';\nimport useWindowSize from '../../library/hooks/useWindowSize';\nimport appActions from '../../redux/app/actions';\nimport siteConfig from '../../config/site.config';\nimport Sidebar from '../Sidebar';\nimport Topbar from '../Topbar';\nimport DashboardRoutes from './DashboardRoutes';\nimport MessengerCustomerChat from 'react-messenger-customer-chat';\n\nimport {DashboardContainer, DashboardGlobalStyles} from './Dashboard.styles';\n\nconst {Content, Footer} = Layout;\nconst {toggleAll} = appActions;\n\nexport default () => {\n  const dispatch = useDispatch();\n  const appHeight = useSelector(state => state.App.height);\n  const {width, height} = useWindowSize();\n  React.useEffect(() => {\n    dispatch(toggleAll(width, height));\n  }, [width, height, dispatch]);\n  return (\n    <DashboardContainer>\n      <DashboardGlobalStyles/>\n      <Layout style={{height: height}}>\n        <Topbar/>\n        <Layout\n          className={'dashboard-mainlayout'}\n          style={{\n            height: appHeight,\n          }}\n        >\n          <Content className={'dashboard-content'}>\n            <DashboardRoutes/>\n          </Content>\n          {/*<MessengerCustomerChat pageId={''} appId={'516142433376694'}/>*/}\n          <Footer className={'dashboard-footer'}>{siteConfig.footerText}</Footer>\n        </Layout>\n      </Layout>\n    </DashboardContainer>\n  );\n}\n","// Transition\nexport function transition(timing = 0.3) {\n  return `\n      -webkit-transition: all ${timing}s cubic-bezier(0.215, 0.61, 0.355, 1);\n      -moz-transition: all ${timing}s cubic-bezier(0.215, 0.61, 0.355, 1);\n      -ms-transition: all ${timing}s cubic-bezier(0.215, 0.61, 0.355, 1);\n      -o-transition: all ${timing}s cubic-bezier(0.215, 0.61, 0.355, 1);\n      transition: all ${timing}s cubic-bezier(0.215, 0.61, 0.355, 1);\n  `;\n}\n\n// Border Radius\nexport function borderRadius(radius = 0) {\n  return `\n      -webkit-border-radius: ${radius};\n      -moz-border-radius: ${radius};\n      -ms-transition: ${radius};\n      -o-border-radius: ${radius};\n      border-radius: ${radius};\n  `;\n}\n\n// Box Shadow\nexport function boxShadow(shadow = 'none') {\n  return `\n      -webkit-box-shadow: ${shadow};\n      -moz-box-shadow: ${shadow};\n      box-shadow: ${shadow};\n  `;\n}\n"],"names":["isClient","window","getSize","React","width","innerWidth","undefined","height","innerHeight","size","setSize","onHandleResize","addEventListener","removeEventListener","injectIntl","props","withRef","direction","document","getElementsByTagName","getAttribute","styled","palette","borderRadius","transition","Menu","appActions","key","label","children","Header","Item","SubMenu","className","to","siteConfig","src","StardewText","mode","onSelect","item","keyPath","selectedKeys","DashboardMenuItems","map","title","routes","path","component","lazy","exact","AppRouter","url","useRouteMatch","Suspense","fallback","route","idx","DashboardGlobalStyles","createGlobalStyle","DashboardContainer","Content","Footer","toggleAll","dispatch","useDispatch","appHeight","useSelector","state","App","useWindowSize","style","Topbar","timing","radius"],"sourceRoot":""}